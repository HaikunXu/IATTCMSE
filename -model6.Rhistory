foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
stopCluster(cl)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Chunk 2: initial_setup
library(tidyr)
library(dplyr)
library(ggplot2)
# Specify path of parent directory
pdir = "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir = "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
library(IATTCMSE)
library(foreach)
library(doParallel)
#Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
#Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 5
nyears <- 12
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 #number of assessment period recruitment in the projection
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1]
HCR_name <-  "HCR_staff_0"
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
# Set the HCR
HCR <- paste0(HCR_name, "/")
# Chunk 3: management_output
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}
Record_all$itr <- as.factor(Record_all$itr)
}
Record_all$Step <- as.factor(Record_all$Step)
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = closure, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = SBR_d, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = Fadjust, fill = OM)) +
theme_bw() +
ylab("F/F30%")
# ggplot(data = Record_all) +
#   geom_boxplot(aes(x = Step, y = (Time_Stamp)/60, fill = OM)) +
#   theme_bw() +
#   ylab("Time chart in minute")
# Chunk 4
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
Output <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Output.csv")))
Output$OM <- OM
Output$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Output_all <- Output
else
Output_all <- rbind(Output_all, Output)
}
}
Output_all_long <- Output_all %>%
mutate(itr = as.factor(itr),
Year = Year / 4 + 1974.875,
year = floor(Year) + 0.5) %>%
gather(2:7, key = "Quantity", value = "Value") %>%
filter(Quantity %in% c("Catch", "SB", "SBR", "SBR_d"))
output_all_old <- Output_all_long %>%
filter(Year < 2024)
output_all_new <- Output_all_long %>%
filter(Year > 2024, Year < max(Year))
ggplot() +
geom_point(aes(x = Year, y = Value, color = OM, shape = OM), alpha = 1, data = output_all_new) +
facet_wrap(~Quantity, scales = "free_y", nrow = 2) +
theme_bw()
ggplot() +
geom_boxplot(aes(x = factor(year), y = Value, fill = OM), data = output_all_new) +
facet_wrap(~Quantity, scales = "free_y", nrow = 2) +
theme_bw()
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 20
nyears <- 30
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# simulate and save recruitment devs
# set.seed(123)
# seeds <- sample(1:1e3, size = niterations, replace = FALSE)  # Sample 5 elements without replacement
# write.csv(seeds, file = paste0(pdir,"seeds.csv"), row.names = FALSE)
#
# R_devs <- matrix(NA, nrow = nquarters, ncol = niterations)
# for (i in 1:niterations) {
#   set.seed(seeds[i])
#   R_devs[,i] <- rnorm(n = nquarters, mean = 0, sd = 0.6) - 0.6 ^ 2 / 2
# }
#
# write.csv(R_devs, file = paste0(pdir,"R_devs.csv"), row.names = FALSE)
# Calculate the numbers of cores
no_cores = 10 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1] #, "Fix-1.01-1", "Fix-1.02-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_0", "HCR_staff_0_Fscaler", "HCR_staff_Fscaler")[2]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 3;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = FALSE
)
}
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 20
nyears <- 30
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# simulate and save recruitment devs
# set.seed(123)
# seeds <- sample(1:1e3, size = niterations, replace = FALSE)  # Sample 5 elements without replacement
# write.csv(seeds, file = paste0(pdir,"seeds.csv"), row.names = FALSE)
#
# R_devs <- matrix(NA, nrow = nquarters, ncol = niterations)
# for (i in 1:niterations) {
#   set.seed(seeds[i])
#   R_devs[,i] <- rnorm(n = nquarters, mean = 0, sd = 0.6) - 0.6 ^ 2 / 2
# }
#
# write.csv(R_devs, file = paste0(pdir,"R_devs.csv"), row.names = FALSE)
# Calculate the numbers of cores
no_cores = 10 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1] #, "Fix-1.01-1", "Fix-1.02-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_0", "HCR_staff_0_Fscaler", "HCR_staff_Fscaler")[2]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 3;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = FALSE
)
}
View(runs)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Chunk 2: initial_setup
library(tidyr)
library(dplyr)
library(ggplot2)
# Specify path of parent directory
pdir = "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir = "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
library(IATTCMSE)
library(foreach)
library(doParallel)
#Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
#Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 20
nyears <- 30
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 #number of assessment period recruitment in the projection
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1]
HCR_name <-  "HCR_staff_0"
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
# Set the HCR
HCR <- paste0(HCR_name, "/")
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}
Record_all$itr <- as.factor(Record_all$itr)
}
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 4:niterations) {
itr = paste0("itr", itrnum, "/")
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
if (OMnum == 1 & itrnum == 4)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}
Record_all$itr <- as.factor(Record_all$itr)
}
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
skip_to_next <- FALSE
tryCatch({
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}, error = function(e) {
skip_to_next <<- TRUE
})
if (skip_to_next) {
next
}
}
}
Record_all$itr <- as.factor(Record_all$itr)
Record_all$Step <- as.factor(Record_all$Step)
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = closure, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = SBR_d, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = Fadjust, fill = OM)) +
theme_bw() +
ylab("F/F30%")
# ggplot(data = Record_all) +
#   geom_boxplot(aes(x = Step, y = (Time_Stamp)/60, fill = OM)) +
#   theme_bw() +
#   ylab("Time chart in minute")
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
skip_to_next <- FALSE
tryCatch({
Output <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Output.csv")))
Output$OM <- OM
Output$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Output_all <- Output
else
Output_all <- rbind(Output_all, Output)
}, error = function(e) {
skip_to_next <<- TRUE
})
if (skip_to_next) {
next
}
}
}
Output_all_long <- Output_all %>%
mutate(itr = as.factor(itr),
Year = Year / 4 + 1974.875,
year = floor(Year) + 0.5) %>%
gather(2:7, key = "Quantity", value = "Value") %>%
filter(Quantity %in% c("Catch", "SB", "SBR", "SBR_d"))
output_all_old <- Output_all_long %>%
filter(Year < 2024)
output_all_new <- Output_all_long %>%
filter(Year > 2024, Year < max(Year))
ggplot() +
geom_point(aes(x = Year, y = Value, color = OM, shape = OM), alpha = 1, data = output_all_new) +
facet_wrap(~Quantity, scales = "free_y", nrow = 2) +
theme_bw()
ggplot() +
geom_boxplot(aes(x = factor(year), y = Value, fill = OM), data = output_all_new) +
facet_wrap(~Quantity, scales = "free_y", nrow = 2) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = (Time_Stamp)/60, fill = OM)) +
theme_bw() +
ylab("Time chart in minute")
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = (Time_Stamp - min(Time_Stamp))/60, fill = OM)) +
theme_bw() +
ylab("Time chart in minute")
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 12
nyears <- 21
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# simulate and save recruitment devs
# set.seed(123)
# seeds <- sample(1:1e3, size = niterations, replace = FALSE)  # Sample 5 elements without replacement
# write.csv(seeds, file = paste0(pdir,"seeds.csv"), row.names = FALSE)
#
# R_devs <- matrix(NA, nrow = nquarters, ncol = niterations)
# for (i in 1:niterations) {
#   set.seed(seeds[i])
#   R_devs[,i] <- rnorm(n = nquarters, mean = 0, sd = 0.6) - 0.6 ^ 2 / 2
# }
#
# write.csv(R_devs, file = paste0(pdir,"R_devs.csv"), row.names = FALSE)
# Calculate the numbers of cores
no_cores = 12 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1] #, "Fix-1.01-1", "Fix-1.02-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_0", "HCR_staff_0_Fscaler", "HCR_staff_Fscaler")[2]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 3;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = FALSE
)
}
