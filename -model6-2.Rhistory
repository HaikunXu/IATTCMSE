theme_bw()
SB_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SB, 0.1, na.rm = TRUE),
medium = quantile(SB, 0.5, na.rm = TRUE),
high = quantile(SB, 0.9, na.rm = TRUE))
# SB
SBR_d <- Output_all %>%
group_by(HCR, Year) %>%
mutate(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = quantile(SBR_d, 0.5, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
theme_bw()
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SB, 0.1, na.rm = TRUE),
medium = quantile(SB, 0.5, na.rm = TRUE),
high = quantile(SB, 0.9, na.rm = TRUE))
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SB, 0.1, na.rm = TRUE),
medium = quantile(SB, 0.5, na.rm = TRUE),
high = quantile(SB, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
facet_wrap(~ OM)
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
facet_wrap(~ OM) +
theme_bw()
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SB, 0.1, na.rm = TRUE),
medium = quantile(SB, 0.5, na.rm = TRUE),
high = quantile(SB, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
facet_wrap(~ HCR) +
theme_bw()
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
facet_wrap(~ HCR) +
theme_bw()
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = quantile(SBR_d, 0.5, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
facet_wrap(~ HCR) +
theme_bw()
ggplot(data = SBR_d %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
geom_hline(yintercept = 0.3) +
theme_bw()
ggplot(data = SBR_d %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
theme_bw()
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = quantile(SBR_d, 0.5, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
facet_wrap(~ HCR) +
theme_bw()
# SBR
SBR <- Output_all %>%
group_by(HCR, Year) %>%
mutate(low = quantile(SBR, 0.1, na.rm = TRUE),
medium = quantile(SBR, 0.5, na.rm = TRUE),
high = quantile(SBR, 0.9, na.rm = TRUE))
ggplot(data = SBR %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
ylab("SBR") +
theme_bw()
SBR_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SBR, 0.1, na.rm = TRUE),
medium = quantile(SBR, 0.5, na.rm = TRUE),
high = quantile(SBR, 0.9, na.rm = TRUE))
ggplot(data = SBR_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
facet_wrap(~ HCR) +
ylab("SBR") +
theme_bw()
1759274693-1759269421
(1759274693-1759269421)/60
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Chunk 2: initial_setup
library(tidyr)
library(dplyr)
library(ggplot2)
#Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
#Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 3
nyears <- 21
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 #number of assessment period recruitment in the projection
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
for (HCRnum in 1:length(HCR_name)) {
# Set the HCR
HCR <- paste0(HCR_name[HCRnum], "/")
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
skip_to_next <- FALSE
tryCatch({
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
Record$HCR <- HCR_name[HCRnum]
if (HCRnum == 1 & OMnum == 1 & itrnum == 1)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}, error = function(e) {
skip_to_next <<- TRUE
})
if (skip_to_next) {
next
}
}
}
}
Record_all_count <- Record_all %>%
filter(Step == nsteps, max_gradient < 0.1) %>%
group_by(HCR, OM) %>%
summarise(count = n())
Record_all_failed <- Record_all %>%
filter(Step == nsteps) %>%
filter(max_gradient > 0.1 | is.na(max_gradient)) %>%
select(OM, itr) %>%
mutate(Flag = 0)
Record_all <- left_join(Record_all, Record_all_failed) %>%
filter(is.na(Flag))
Record_all$itr <- as.factor(Record_all$itr)
Record_all$Step <- as.factor(Record_all$Step)
Record_all$HCR <- as.factor(Record_all$HCR)
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = closure, fill = OM)) +
facet_wrap(~ HCR) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = SBR_d, fill = OM)) +
facet_wrap(~ HCR) +
theme_bw()
for (HCRnum in 1:length(HCR_name)) {
# Set the HCR
HCR <- paste0(HCR_name[HCRnum], "/")
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
skip_to_next <- FALSE
tryCatch({
Output <- read.csv(paste0(paste0(
pdir, HS, HCR, OM, itr, "Output.csv"
)))
Output$OM <- OM
Output$itr <- itrnum
Output$HCR <- HCR_name[HCRnum]
if (HCRnum == 1 & OMnum == 1 & itrnum == 1)
Output_all <- Output
else
Output_all <- rbind(Output_all, Output)
}, error = function(e) {
skip_to_next <<- TRUE
})
if (skip_to_next) {
next
}
}
}
}
Output_all <- Output_all %>%
mutate(itr = as.factor(itr),
Year = Year / 4 + 1974.875,
year = floor(Year) + 0.5)
# Catch
Catch <- Output_all %>%
group_by(HCR, OM, itr, year) %>%
summarise(Catch_annual = sum(Catch)) %>%
group_by(HCR, year) %>%
mutate(Catch_low = quantile(Catch_annual, 0.1, na.rm = TRUE),
Catch_medium = quantile(Catch_annual, 0.5, na.rm = TRUE),
Catch_high = quantile(Catch_annual, 0.9, na.rm = TRUE))
ggplot(data = Catch %>% filter(year > 2023)) +
geom_ribbon(aes(x = year, ymin = Catch_low, ymax = Catch_high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = year, y = Catch_medium, color = HCR), linewidth = 1) +
theme_bw()
# SBR_d
SBR_d <- Output_all %>%
group_by(HCR, Year) %>%
mutate(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = quantile(SBR_d, 0.5, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
ylab("SBR_d") +
theme_bw()
SBR_d_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = quantile(SBR_d, 0.5, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
facet_wrap(~ HCR) +
ylab("SBR_d") +
theme_bw()
# SBR
SBR <- Output_all %>%
group_by(HCR, Year) %>%
mutate(low = quantile(SBR, 0.1, na.rm = TRUE),
medium = quantile(SBR, 0.5, na.rm = TRUE),
high = quantile(SBR, 0.9, na.rm = TRUE))
ggplot(data = SBR %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = HCR), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = HCR), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
ylab("SBR") +
theme_bw()
SBR_OM <- Output_all %>%
group_by(HCR, Year, OM) %>%
mutate(low = quantile(SBR, 0.1, na.rm = TRUE),
medium = quantile(SBR, 0.5, na.rm = TRUE),
high = quantile(SBR, 0.9, na.rm = TRUE))
ggplot(data = SBR_OM %>% filter(Year > 2023)) +
geom_ribbon(aes(x = Year, ymin = low, ymax = high, fill = OM), alpha = 0.25) +
geom_line(aes(x = Year, y = medium, color = OM), linewidth = 1) +
geom_hline(yintercept = 0.2) +
geom_hline(yintercept = 0.3, linetype = "dashed") +
facet_wrap(~ HCR) +
ylab("SBR") +
theme_bw()
p_SBR_d <- Output_all %>%
group_by(HCR, Year) %>%
mutate(p = SBR_d < 0.2)
View(p_SBR_d)
p_SBR_d <- Output_all %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
mutate(p = sum(check)/ n())
View(p_SBR_d)
p_SBR_d <- Output_all %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
ggplot(data = Output_all) +
geom_violin(aes(x = HCR, y = SBR_d))
ggplot(data = Output_all) +
geom_violin(aes(x = HCR, y = SBR_d)) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
theme_bw()
Output_MSE <- Output_all %>% filter(year > 2023)
p_SBR_d <- Output_all_MSE %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
Output_MSE <- Output_all %>% filter(year > 2023)
p_SBR_d <- Output_all_MSE %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
p_SBR_d <- Output_MSE %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
ggplot(data = Output_MSE) +
geom_violin(aes(x = HCR, y = SBR_d)) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR)) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_density(aes(x = SBR_d, color = HCR)) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_density(aes(x = SBR_d, color = HCR)) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR)) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.1) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.05) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
p_SBR_d <- Output_MSE %>%
mutate(check = SBR_d < 0.2) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.02) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.01) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.05) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR_d, color = HCR), binwidth = 0.01) +
geom_vline(xintercept = 0.2, linetype = "dashed") +
theme_bw()
p_SBR <- Output_MSE %>%
mutate(check = SBR < 0.077) %>%
group_by(HCR) %>%
summarise(p = sum(check)/ n())
View(p_SBR)
ggplot(data = Output_MSE) +
geom_freqpoly(aes(x = SBR, color = HCR), binwidth = 0.01) +
geom_vline(xintercept = 0.077, linetype = "dashed") +
theme_bw()
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, color = HCR)) +
theme_bw()
?geom_violin
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, color = HCR, draw_quantiles = c(0.1, 0.5, 0.9))) +
theme_bw()
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, color = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
theme_bw()
View(Catch)
Catch <- Output_MSE %>%
na.omit() %>%
group_by(HCR, OM, itr, year) %>%
summarise(Catch_annual = sum(Catch))
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, color = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
theme_bw()
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, fill = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
theme_bw()
ggplot(data = Output_MSE) +
geom_violin(aes(x = HCR, y = SBR, color = HCR)) +
geom_hline(yintercept = 0.077, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_violin(aes(x = HCR, y = SBR, fill = HCR)) +
geom_hline(yintercept = 0.077, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_violin(aes(x = HCR, y = SBR, fill = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
geom_hline(yintercept = 0.077, linetype = "dashed") +
theme_bw()
ggplot(data = Output_MSE) +
geom_violin(aes(x = HCR, y = SBR_d, fill = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
geom_hline(yintercept = 0.2, linetype = "dashed") +
theme_bw()
Catch <- Output_MSE %>%
na.omit() %>%
group_by(HCR, OM, itr, year) %>%
summarise(Catch_annual = sum(Catch))
ggplot(data = Catch) +
geom_violin(aes(x = HCR, y = Catch_annual, fill = HCR), draw_quantiles = c(0.1, 0.5, 0.9)) +
theme_bw()
Catch_stats <- Catch %>%
group_by(HCR, year) %>%
summarise(catch_HCR = mean(Catch_annual))
Catch_stats <- Catch %>%
group_by(HCR, year) %>%
summarise(catch_HCR = mean(Catch_annual)) %>%
group_by(HCR) %>%
summarise(ave_catch = mean(Catch_HCR),
std_catch = sd(Catch_HCR))
Catch_stats <- Catch %>%
group_by(HCR, year) %>%
summarise(Catch_HCR = mean(Catch_annual)) %>%
group_by(HCR) %>%
summarise(ave_catch = mean(Catch_HCR),
std_catch = sd(Catch_HCR))
View(Catch_stats)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# Chunk 2: initial_setup
library(tidyr)
library(dplyr)
library(ggplot2)
# Specify path of parent directory
pdir = "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir = "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
library(IATTCMSE)
library(foreach)
library(doParallel)
#Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
#Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 18
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 #number of assessment period recruitment in the projection
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")[1:4]
HCR_name <-  "HCR_staff_0"
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
# Set the HCR
HCR <- paste0(HCR_name, "/")
for (OMnum in 1:length(OM_name)) {
# Set the scenario
OM <- paste0(OM_name[OMnum], "/")
# extract saved management output
for (itrnum in 1:niterations) {
itr = paste0("itr", itrnum, "/")
skip_to_next <- FALSE
tryCatch({
Record <- read.csv(paste0(paste0(pdir, HS, HCR, OM, itr, "Record.csv")))
Record$Step <- 1:nsteps
Record$OM <- OM
Record$itr <- itrnum
if (OMnum == 1 & itrnum == 1)
Record_all <- Record
else
Record_all <- rbind(Record_all, Record)
}, error = function(e) {
skip_to_next <<- TRUE
})
if (skip_to_next) {
next
}
}
}
Record_all$itr <- as.factor(Record_all$itr)
Record_all$Step <- as.factor(Record_all$Step)
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = closure, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = SBR_d, fill = OM)) +
theme_bw()
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = Fcurrent_EM/F30_EM, fill = OM)) +
theme_bw() +
ylab("F_EM/F30_EM")
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = Fcurrent/F30, fill = OM)) +
theme_bw() +
ylab("F/F30")
ggplot(data = Record_all) +
geom_boxplot(aes(x = Step, y = (Fcurrent_EM/F30_EM) / (Fcurrent/F30), fill = OM)) +
theme_bw() +
ylab("F/F30(EM) / F/F30_OM")
