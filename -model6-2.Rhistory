summarise(Closure_change_HCR = mean(closure_change)) %>%
group_by(HS, HCR) %>%
summarise(ave_closure_change = mean(Closure_change_HCR),
std_closure_change= sd(Closure_change_HCR))
kable(Catch_stats,caption = "Catch")
# Chunk 10: F/F30
F_F30 <- Record_all %>%
mutate(Step = as.numeric(Step)) %>%
group_by(HS, HCR, Step) %>%
summarise(low = quantile(Fcurrent/F30, 0.1, na.rm = TRUE),
medium = mean(Fcurrent/F30, 0.5, na.rm = TRUE),
high = quantile(Fcurrent/F30, 0.9, na.rm = TRUE))
ggplot(data = F_F30) +
geom_errorbar(aes(x = Step, ymin = low, ymax = high, color = HCR)) +
geom_point(aes(x = Step, y = medium, color = HCR, shape = HCR), size = 3) +
facet_wrap(~ HS) +
theme_bw() +
geom_hline(yintercept = 1) +
ylab("F / F30%") +
xlab("Management cycle")
F_F30_OM <- Record_all %>%
mutate(Step = as.numeric(Step)) %>%
group_by(HS, HCR, OM, Step) %>%
summarise(low = quantile(Fcurrent/F30, 0.1, na.rm = TRUE),
medium = mean(Fcurrent/F30, 0.5, na.rm = TRUE),
high = quantile(Fcurrent/F30, 0.9, na.rm = TRUE))
ggplot(data = F_F30_OM) +
# geom_errorbar(aes(x = Step, ymin = low, ymax = high, color = HCR)) +
geom_point(aes(x = Step, y = medium, color = OM), size = 3) +
facet_grid(HCR ~ HS) +
theme_bw() +
geom_hline(yintercept = 1) +
ylab("F / F30%") +
xlab("Management cycle")
View(Record_all)
SBR_d_OM <- Record_all %>%
mutate(Step = as.numeric(Step)) %>%
group_by(HS, HCR, OM, Step) %>%
summarise(low = quantile(SBR_d, 0.1, na.rm = TRUE),
medium = mean(SBR_d, na.rm = TRUE),
high = quantile(SBR_d, 0.9, na.rm = TRUE))
ggplot(data = SBR_d_OM) +
# geom_errorbar(aes(x = Step, ymin = low, ymax = high, color = HCR)) +
geom_point(aes(x = Step, y = medium, color = OM), size = 3) +
facet_grid(HCR ~ HS) +
theme_bw() +
geom_hline(yintercept = 1) +
ylab("F / F30%") +
xlab("Management cycle")
ggplot(data = SBR_d_OM) +
# geom_errorbar(aes(x = Step, ymin = low, ymax = high, color = HCR)) +
geom_point(aes(x = Step, y = medium, color = OM), size = 3) +
facet_grid(HCR ~ HS) +
theme_bw() +
geom_hline(yintercept = 0.3, linetype = "dashed") +
ylab("Dynamic SBR from the EM") +
xlab("Management cycle")
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
devtools::document()
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
devtools::document()
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_Fscaler_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
devtools::document()
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_Fscaler_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
devtools::document()
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_Fscaler_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
clean=FALSE
itr = paste0("itr", itrnum, "/")
# create and set directory for each iteration (i.e. different recruitment)
dir_itr <- paste0(pdir, HS, HCR, OM, itr)
dir.create(dir_itr)
nsteps <- nquarters / 4 / Mcycle
R_devs <- read.csv(paste0(pdir, "R_devs.csv"))[, itrnum] # R devs for the itr iteration
seed <- read.csv(paste0(pdir, "seeds.csv"))[itrnum, 1]
SBR_d_ts <- rep(NA, nsteps)
max_gradient_ts <- rep(NA, nsteps)
itr = paste0("itr", itrnum, "/")
i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
itr = paste0("itr", itrnum, "/")
# create and set directory for each iteration (i.e. different recruitment)
dir_itr <- paste0(pdir, HS, HCR, OM, itr)
dir.create(dir_itr)
nsteps <- nquarters / 4 / Mcycle
R_devs <- read.csv(paste0(pdir, "R_devs.csv"))[, itrnum] # R devs for the itr iteration
seed <- read.csv(paste0(pdir, "seeds.csv"))[itrnum, 1]
SBR_d_ts <- rep(NA, nsteps)
max_gradient_ts <- rep(NA, nsteps)
Closure_ts <- rep(NA, nsteps)
Fratio_ts <- rep(NA, nsteps)
F30_EM_ts <- rep(NA, nsteps)
F30_ts <- rep(NA, nsteps)
Fcurrent_EM_ts <- rep(NA, nsteps)
Fcurrent_ts <- rep(NA, nsteps)
Time_ts <- rep(NA, nsteps)
SB_ts <- rep(NA, nsteps)
# *************************************************************************************
# step 1: initialize the OM by copying from the benchmark assessment model
# *************************************************************************************
step1 <- IATTCMSE::Initialize_OM(pdir, sdir, HS, HCR, OM, dat_name, ctl_name, ss_name, clean)
Flag <- 1 # mark whether the loop is running without an EM with a large gradient
istep=1
# specify the previous OM and EM directories
if (istep == 1) {
dir_OM_previous <- paste0(pdir, HS, HCR, OM, "itr0/")
dir_EM_previous <- paste0(pdir, HS, "EM/")
CurrentClosure <- 72
}
# *************************************************************************************
# step 2: Compute the F for the new management cycle
# *************************************************************************************
dir_EM_HCR <- ifelse(
istep == 1,
paste0(pdir, HS, "EM/"),
paste0(pdir, HS, HCR, OM, itr, "step", istep - 1, "/", "EM/")
)
if (HCR == "HCR_staff_Fscaler_new")
step2 <- IATTCMSE::HCR_staff_Fscaler_new(dir_EM = dir_EM_HCR, istep, CurrentClosure)
HCR
library(IATTCMSE)
library(foreach)
library(doParallel)
# Specify path of parent directory
pdir <- "D:/OneDrive - IATTC/IATTC/2025/MSE/Test/"
# Specify the path of conditioned initial OM
sdir <- "D:/OneDrive - IATTC/IATTC/2025/SAC16/BET F30/"
# Dimensions
niterations <- 10
nyears <- 15
nquarters <- nyears * 4
Mcycle <- 3
nsteps <- nyears / Mcycle
endquarter <- 196
startquarter <- 17
n_extra_R <- 2 # number of assessment period recruitment in the projection
EM_comp_fleet <- c(4, 23) # fleets with comps in ASPM Rdevs+
dat_name <- "BET-EPO.dat"
ctl_name <- "BET-EPO.ctl"
ss_name <- "ss.exe"
# Calculate the numbers of cores
no_cores = 14 # detectCores() - 2
# Initiate cluster
cl = makeCluster(no_cores)
registerDoParallel(cl)
OM_name <- c("Fix-1-1", "Sel-1-1", "Gro-1-1", "Mrt-1-1")
OM <- paste0(OM_name, "/")
HCR_name <- c("HCR_staff", "HCR_staff_Fscaler", "HCR_staff_Fscaler_new")[3]
HCR <- paste0(HCR_name, "/")
# Set the harvest strategy
HSnum <- 1
HS <- paste0("HS", HSnum, "/")
dir.create(paste0(pdir, HS)) # for that harvest strategy
for (HCRnum in 1:length(HCR)) {
# unlink(paste0(pdir, HS, HCR[HCRnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum])) # for that harvest control rule
for (OMnum in 1:length(OM)) {
# create a folder for all iterations
unlink(paste0(pdir, HS, HCR[HCRnum], OM[OMnum]), recursive = TRUE)
dir.create(paste0(pdir, HS, HCR[HCRnum], OM[OMnum])) # for that OM
}
}
# specify the run list
runs <- data.frame(expand.grid(run_hcr = HCR, run_om = OM, run_itr = 1:niterations))
# i = 1;  HCR= runs[i,1]; OM = runs[i,2]; itrnum= runs[i,3]
# BET_MSE(pdir,sdir,HS,runs[i, 1],runs[i, 2],runs[i, 3],nquarters,Mcycle,n_extra_R,startquarter,endquarter,EM_comp_fleet,dat_name,ctl_name,ss_name,clean = FALSE)
foreach(i = 1:nrow(runs)) %dopar% {
IATTCMSE::BET_MSE(
pdir,
sdir,
HS,
HCR = runs[i, 1],
OM = runs[i, 2],
itr = runs[i, 3],
nquarters,
Mcycle,
n_extra_R,
startquarter,
endquarter,
EM_comp_fleet,
dat_name,
ctl_name,
ss_name,
clean = TRUE
)
}
runs[14]
runs[14,]
devtools::document()
